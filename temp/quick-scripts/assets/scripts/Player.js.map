{"version":3,"sources":["Player.js"],"names":["cc","Class","extends","Component","properties","jumpHeight","jumpDuration","maxMoveSpeed","accel","onLoad","jumpAction","setJumpAction","node","runAction","accLeft","accRight","xSpeed","setInputControl","update","dt","Math","abs","x","jumpUp","moveBy","p","easing","easeCubicActionOut","jumpDown","easeCubicActionIn","repeatForever","sequence","self","systemEvent","on","SystemEvent","EventType","KEY_DOWN","event","keyCode","KEY","a","d","KEY_UP"],"mappings":";;;;;;AAAAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACR;AACAC,oBAAY,CAFJ;AAGR;AACAC,sBAAc,CAJN;AAKR;AACAC,sBAAc,CANN;AAOR;AACAC,eAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlBQ,KAHP;;AAwBL;AACIC,YAAQ,kBAAY;AAChB;AACA,aAAKC,UAAL,GAAkB,KAAKC,aAAL,EAAlB;AACA,aAAKC,IAAL,CAAUC,SAAV,CAAoB,KAAKH,UAAzB;;AAEJ;AACA,aAAKI,OAAL,GAAe,KAAf;AACA,aAAKC,QAAL,GAAgB,KAAhB;AACA;AACA,aAAKC,MAAL,GAAc,CAAd;;AAEA;AACA,aAAKC,eAAL;AACC,KAtCA;;AAyCL;AACA;;AAEA;AACAC,YAAQ,gBAAUC,EAAV,EAAc;AAClB;AACA,YAAI,KAAKL,OAAT,EAAkB;AACd,iBAAKE,MAAL,IAAe,KAAKR,KAAL,GAAaW,EAA5B;AACH,SAFD,MAEO,IAAI,KAAKJ,QAAT,EAAmB;AACtB,iBAAKC,MAAL,IAAe,KAAKR,KAAL,GAAaW,EAA5B;AACH;AACD;AACA,YAAKC,KAAKC,GAAL,CAAS,KAAKL,MAAd,IAAwB,KAAKT,YAAlC,EAAiD;AAC7C;AACA,iBAAKS,MAAL,GAAc,KAAKT,YAAL,GAAoB,KAAKS,MAAzB,GAAkCI,KAAKC,GAAL,CAAS,KAAKL,MAAd,CAAhD;AACH;;AAED;AACA,aAAKJ,IAAL,CAAUU,CAAV,IAAe,KAAKN,MAAL,GAAcG,EAA7B;AACH,KA5DI;;AA8DTR,mBAAe,yBAAY;;AAEvB;AACA,YAAIY,SAASvB,GAAGwB,MAAH,CAAU,KAAKlB,YAAf,EAA6BN,GAAGyB,CAAH,CAAK,CAAL,EAAQ,KAAKpB,UAAb,CAA7B,EAAuDqB,MAAvD,CAA8D1B,GAAG2B,kBAAH,EAA9D,CAAb;AACA;AACA,YAAIC,WAAW5B,GAAGwB,MAAH,CAAU,KAAKlB,YAAf,EAA6BN,GAAGyB,CAAH,CAAK,CAAL,EAAQ,CAAC,KAAKpB,UAAd,CAA7B,EAAwDqB,MAAxD,CAA+D1B,GAAG6B,iBAAH,EAA/D,CAAf;AACA;AACA,eAAO7B,GAAG8B,aAAH,CAAiB9B,GAAG+B,QAAH,CAAYR,MAAZ,EAAoBK,QAApB,CAAjB,CAAP;AAEH,KAvEQ;AAwETX,qBAAiB,2BAAY;AACzB,YAAIe,OAAO,IAAX;AACA;AACA;AACAhC,WAAGiC,WAAH,CAAeC,EAAf,CAAkBlC,GAAGmC,WAAH,CAAeC,SAAf,CAAyBC,QAA3C,EAAqD,UAAUC,KAAV,EAAgB;AACjE,oBAAOA,MAAMC,OAAb;AACI,qBAAKvC,GAAGwC,GAAH,CAAOC,CAAZ;AACIT,yBAAKlB,OAAL,GAAe,IAAf;AACA;AACJ,qBAAKd,GAAGwC,GAAH,CAAOE,CAAZ;AACIV,yBAAKjB,QAAL,GAAgB,IAAhB;AACA;AANR;AAQH,SATD;;AAWA;AACAf,WAAGiC,WAAH,CAAeC,EAAf,CAAkBlC,GAAGmC,WAAH,CAAeC,SAAf,CAAyBO,MAA3C,EAAmD,UAAUL,KAAV,EAAgB;AAC/D,oBAAOA,MAAMC,OAAb;AACI,qBAAKvC,GAAGwC,GAAH,CAAOC,CAAZ;AACIT,yBAAKlB,OAAL,GAAe,KAAf;AACA;AACJ,qBAAKd,GAAGwC,GAAH,CAAOE,CAAZ;AACIV,yBAAKjB,QAAL,GAAgB,KAAhB;AACA;AANR;AAQH,SATD;AAUH;;AAlGQ,CAAT","file":"Player.js","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // 主角跳跃高度\r\n        jumpHeight: 0,\r\n        // 主角跳跃持续时间\r\n        jumpDuration: 0,\r\n        // 最大移动速度\r\n        maxMoveSpeed: 0,\r\n        // 加速度\r\n        accel: 0,\r\n        // foo: {\r\n        //    default: null,      // The default value will be used only when the component attaching\r\n        //                           to a node for the first time\r\n        //    url: cc.Texture2D,  // optional, default is typeof default\r\n        //    serializable: true, // optional, default is true\r\n        //    visible: true,      // optional, default is true\r\n        //    displayName: 'Foo', // optional\r\n        //    readonly: false,    // optional, default is false\r\n        // },\r\n        // ...\r\n    },\r\n\r\n    // use this for initialization\r\n        onLoad: function () {\r\n            // 初始化跳跃动作\r\n            this.jumpAction = this.setJumpAction();\r\n            this.node.runAction(this.jumpAction);\r\n            \r\n        // 加速度方向开关\r\n        this.accLeft = false;\r\n        this.accRight = false;\r\n        // 主角当前水平方向速度\r\n        this.xSpeed = 0;\r\n\r\n        // 初始化键盘输入监听\r\n        this.setInputControl();\r\n        },\r\n\r\n\r\n    // called every frame, uncomment this function to activate update callback\r\n    // update: function (dt) {\r\n\r\n    // },\r\n    update: function (dt) {\r\n        // 根据当前加速度方向每帧更新速度\r\n        if (this.accLeft) {\r\n            this.xSpeed -= this.accel * dt;\r\n        } else if (this.accRight) {\r\n            this.xSpeed += this.accel * dt;\r\n        }\r\n        // 限制主角的速度不能超过最大值\r\n        if ( Math.abs(this.xSpeed) > this.maxMoveSpeed ) {\r\n            // if speed reach limit, use max speed with current direction\r\n            this.xSpeed = this.maxMoveSpeed * this.xSpeed / Math.abs(this.xSpeed);\r\n        }\r\n\r\n        // 根据当前速度更新主角的位置\r\n        this.node.x += this.xSpeed * dt;\r\n    },\r\n\r\nsetJumpAction: function () {\r\n    \r\n    // 跳跃上升\r\n    var jumpUp = cc.moveBy(this.jumpDuration, cc.p(0, this.jumpHeight)).easing(cc.easeCubicActionOut());\r\n    // 下落\r\n    var jumpDown = cc.moveBy(this.jumpDuration, cc.p(0, -this.jumpHeight)).easing(cc.easeCubicActionIn());\r\n    // 不断重复\r\n    return cc.repeatForever(cc.sequence(jumpUp, jumpDown));\r\n    \r\n},\r\nsetInputControl: function () {\r\n    var self = this;\r\n    // 添加键盘事件监听\r\n    // 有按键按下时，判断是否是我们指定的方向控制键，并设置向对应方向加速\r\n    cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, function (event){\r\n        switch(event.keyCode) {\r\n            case cc.KEY.a:\r\n                self.accLeft = true;\r\n                break;\r\n            case cc.KEY.d:\r\n                self.accRight = true;\r\n                break;\r\n        }\r\n    });\r\n\r\n    // 松开按键时，停止向该方向的加速\r\n    cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, function (event){\r\n        switch(event.keyCode) {\r\n            case cc.KEY.a:\r\n                self.accLeft = false;\r\n                break;\r\n            case cc.KEY.d:\r\n                self.accRight = false;\r\n                break;\r\n        }\r\n    });\r\n},\r\n\r\n    \r\n        \r\n});\r\n"]}